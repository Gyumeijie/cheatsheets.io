{"version":3,"sources":["webpack:///./src/penpad/state/getInitialState.tsx","webpack:///./src/penpad/state/index.tsx","webpack:///./src/penpad/state/selectors.ts","webpack:///./src/penpad/DocsNavigation.tsx","webpack:///./src/penpad/DocsBody.tsx","webpack:///./src/penpad/SpecimenNavigation.tsx","webpack:///./src/penpad/ResponsiveResizePanel.tsx","webpack:///./src/penpad/SourceCodePanel.tsx","webpack:///./src/penpad/SpecimenDescriptionPanel.tsx","webpack:///./src/penpad/SpecimenPanels.tsx","webpack:///./src/penpad/utilities/harvestHead.tsx","webpack:///./src/penpad/FrameWrapper.tsx","webpack:///./src/penpad/SpecimenView.tsx","webpack:///./src/penpad/SpecimensBody.tsx","webpack:///./src/penpad/TitleText.tsx","webpack:///./src/penpad/TitleBar.tsx","webpack:///./src/penpad/Penpad.tsx","webpack:///./src/pages/styleguides.jsx","webpack:///./src/penpad/index.tsx","webpack:///./src sync \\.specimens\\.(jsx","webpack:///./src/styleguides/BackButton.specimens.tsx","webpack:///./src/styleguides/LiveSearchInput.specimens.tsx","webpack:///./src/styleguides/RelatedPosts.specimens.tsx","webpack:///./src/styleguides/TopNav.specimens.tsx","webpack:///./src/web/components/FeaturedPageLink.tsx","webpack:///./src/web/components/FeaturedPages.tsx","webpack:///./src/styleguides/FeaturedPages.specimens.tsx"],"names":["getInitialState","props","title","activeView","type","specimens","pages","useFrame","frameWidth","Context","React","createContext","state","actions","AppProvider","Provider","useAppContext","useContext","isActivePage","pageId","isActiveSpecimen","specimenId","DocsNavigation","_useAppContext","react_default","a","createElement","names","Object","keys","sort","className","CSS","root","list","map","name","_cn","item","key","cn","entry","isActive","onClick","setActivePage","file_outline","icon","DocsBody","_ref","page","getActivePage","Fragment","main","style","background","Markdown","body","width","margin","sidebar","penpad_DocsNavigation","Navigation","setActiveSpecimen","container_outline","ResponsiveResizePanel","currentWidth","Panel","index","button","setFrameWidth","SourceCodePanel","view","code","toString","header","spellCheck","Util","textarea","rows","value","readOnly","SpecimenDescriptionPanel","specimen","description","SpecimenPanels","id","penpad_SpecimenDescriptionPanel","penpad_ResponsiveResizePanel","penpad_SourceCodePanel","toProps","attributes","Array","from","reduce","result","attr","_Object$assign","assign","harvestHead","styleEls","document","querySelectorAll","styles","element","innerText","linkEls","links","concat","FrameWrapper","children","head","react_frame_component_lib_default","SpecimenView","Component","componentNode","bodyWidth","frame","flex","padding","penpad_FrameWrapper","iframe","isResponsive","minWidth","iframeBody","SpecimensBody","penpad_SpecimenView","SpecimenNavigation","panels","penpad_SpecimenPanels","TitleText","parts","part","idx","angle_outline","separator","DynamicTitleText","penpad_TitleText","TitleBar","_cn2","left","navButton","navToDocs","navIcon","navLabel","navToSpecimens","library_outline","mid","TitleBar_DynamicTitleText","Penpad","_useAppState","_useState","useState","setState","useAppState","viewType","Helmet_default","content","topnav","penpad_TitleBar","penpad_SpecimensBody","penpad_DocsBody","defaultProps","StyleguidePage","combineContext","context","isArray","ctx","exports","specs","default","require","Home","href","About this","penpad_Penpad","./styleguides/BackButton.specimens.tsx","./styleguides/FeaturedPages.specimens.tsx","./styleguides/LiveSearchInput.specimens.tsx","./styleguides/RelatedPosts.specimens.tsx","./styleguides/TopNav.specimens.tsx","webpackContext","req","webpackContextResolve","__webpack_require__","e","Error","resolve","module","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_web_components_BackButton__WEBPACK_IMPORTED_MODULE_1__","BackButton","_search_containers_LiveSearchInput__WEBPACK_IMPORTED_MODULE_1__","LiveSearchInput","_web_components_RelatedPostsArea__WEBPACK_IMPORTED_MODULE_1__","_web_components_RelatedPostsCallout__WEBPACK_IMPORTED_MODULE_2__","_web_components_RelatedPostsGroup__WEBPACK_IMPORTED_MODULE_3__","RelatedPostsArea","topPages","path","relatedPages","pageCount","RelatedPostsCallout","RelatedPostsGroup","RelatedPostsGroup/2","_web_components_TopNav__WEBPACK_IMPORTED_MODULE_1__","TopNav","TopNav/back","back","TopNav/noTitle","FeaturedPageLink","gatsby_browser_entry","to","FeaturedPagesView","nodes","node","components_FeaturedPageLink","nodePath","query","FeaturedPages","render","data","FeaturedPages_FeaturedPagesView","_1530232981","components_FeaturedPages","FeaturedPages/view"],"mappings":"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","file":"component---src-pages-styleguides-jsx-bd70bbaf03da5627ad7e.js","sourcesContent":["import { Config, State } from '../types'\n\n/**\n * Returns the initial state for the store based on props.\n */\n\nconst getInitialState = (props: Config): State => {\n  return {\n    title: props.title || 'Penpad',\n    activeView: { type: 'specimen' },\n    specimens: props.specimens || {},\n    pages: props.pages || {},\n    useFrame: props.useFrame || false,\n    frameWidth: null\n  }\n}\n\nexport default getInitialState\n","import React, { useContext, useState } from 'react'\nimport { Config, State } from '../types'\nimport getInitialState from './getInitialState'\n\n/** Only used in tests */\n\n/** The context to be used in useAppContext */\nconst Context = React.createContext<{\n  state: State | null\n  actions: Actions | null\n}>({ state: null, actions: null })\n\n/** Context provider */\nconst AppProvider = Context.Provider\n\n/** The main hook */\nconst useAppState = (props: Config) => {\n  const [state, setState] = useState<State>(getInitialState(props))\n\n  const actions = {\n    /** Navigate to a given specimen */\n    setActiveSpecimen(specimenId: string) {\n      setState({\n        ...state,\n        activeView: {\n          type: 'specimen',\n          specimenId\n        }\n      })\n    },\n\n    /** Navigate to a given page */\n    setActivePage(pageId: string) {\n      setState({\n        ...state,\n        activeView: {\n          type: 'page',\n          pageId\n        }\n      })\n    },\n\n    /** Navigate to specimens area */\n    navToSpecimens() {\n      setState({ ...state, activeView: { type: 'specimen' } })\n    },\n\n    /** Navigate to docs area */\n    navToDocs() {\n      // First page\n      const pageId = Object.keys(state.pages || {})[0]\n      setState({ ...state, activeView: { type: 'page', pageId } })\n    },\n\n    /** Resize for responsive mode */\n    setFrameWidth(width: number | null) {\n      setState({ ...state, frameWidth: width })\n    }\n  }\n\n  return { state, actions }\n}\n\n/** Pick up what's given in AppProvider */\nconst useAppContext = () => {\n  return useContext(Context)\n}\n\n/* Actions type */\nexport type Actions = ReturnType<typeof useAppState>['actions']\nexport { useAppState, useAppContext, AppProvider, Context }\n","import { State } from '../types'\n\n/**\n * Get the active `[id, page]` tuple.\n */\n\nexport const getActivePage = (state: State) => {\n  if (!state.activeView) return\n  if (state.activeView.type !== 'page') return\n  if (!state.pages) return\n\n  const { pageId } = state.activeView\n  if (!pageId) return\n\n  const page = state.pages[pageId]\n  if (!page) return\n\n  return [pageId, page]\n}\n\n/**\n * Check if a given page (`pageId`) is the active page.\n */\n\nexport const isActivePage = (state: State, pageId: string) => {\n  if (!state.activeView) return false\n  if (state.activeView.type !== 'page') return false\n\n  return state.activeView.pageId === pageId\n}\n\n/**\n * Check if a given specimen (`specimenId`) is the active page.\n */\n\nexport const isActiveSpecimen = (state: State, specimenId: string) => {\n  if (!state.activeView) return false\n  if (state.activeView.type !== 'specimen') return false\n\n  return state.activeView.specimenId === specimenId\n}\n","// @ts-ignore\nimport Icon from '-!react-svg-loader!clarity-icons-svg/essential/file-outline.svg'\nimport cn from 'classnames'\nimport React from 'react'\n// TODO change this\nimport CSS from './SpecimenNavigation.module.css'\nimport { useAppContext } from './state'\nimport { isActivePage } from './state/selectors'\n\nconst DocsNavigation = () => {\n  const { state, actions } = useAppContext()\n  if (!state || !actions) return <span />\n\n  const { pages } = state\n  const names = Object.keys(pages || {}).sort()\n\n  return (\n    <div className={CSS.root}>\n      <ul className={CSS.list}>\n        {names.map(name => {\n          return (\n            <li className={CSS.item} key={name}>\n              <button\n                className={cn(CSS.entry, {\n                  [CSS.isActive]: isActivePage(state, name)\n                })}\n                onClick={() => {\n                  actions.setActivePage(name)\n                }}\n              >\n                <Icon className={CSS.icon} />\n                <span className={CSS.name}>{name}</span>\n              </button>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default DocsNavigation\n","import React from 'react'\nimport DocsNavigation from './DocsNavigation'\nimport CSS from './Penpad.module.css'\nimport { useAppContext } from './state'\nimport { getActivePage } from './state/selectors'\nimport Markdown from './styles/github-markdown.module.css'\n\nconst DocsBody = () => {\n  const { state, actions } = useAppContext()\n  if (!state || !actions) return <span />\n\n  const [pageId, page] = getActivePage(state) || [null, null]\n\n  return (\n    <>\n      <main className={CSS.main} style={{ background: 'white' }}>\n        <div\n          className={Markdown.body}\n          style={{ width: '700px', margin: '1em auto' }}\n        >\n          {typeof page === 'function' ? page() : null}\n        </div>\n      </main>\n\n      <aside className={CSS.sidebar}>\n        <DocsNavigation />\n      </aside>\n    </>\n  )\n}\n\nexport default DocsBody\n","// @ts-ignore\nimport Icon from '-!react-svg-loader!clarity-icons-svg/technology/container-outline.svg'\nimport cn from 'classnames'\nimport React from 'react'\nimport CSS from './SpecimenNavigation.module.css'\nimport { Actions, useAppContext } from './state'\nimport { isActiveSpecimen } from './state/selectors'\nimport { Specimens } from './types'\n\ninterface Props {\n  specimens: Specimens\n}\n\nconst Navigation = (props: Props) => {\n  const { state, actions } = useAppContext()\n  if (!state || !actions) return <span />\n\n  const { specimens } = props\n\n  const names = Object.keys(specimens).sort()\n\n  return (\n    <div className={CSS.root}>\n      <ul className={CSS.list}>\n        {names.map(name => {\n          return (\n            <li className={CSS.item} key={name}>\n              <button\n                className={cn(CSS.entry, {\n                  [CSS.isActive]: isActiveSpecimen(state, name)\n                })}\n                onClick={() => {\n                  actions.setActiveSpecimen(name)\n                }}\n              >\n                <Icon className={CSS.icon} />\n                <span className={CSS.name}>{name}</span>\n              </button>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default Navigation\n","import cn from 'classnames'\nimport React from 'react'\nimport CSS from './ResponsiveResizePanel.module.css'\nimport { useAppContext } from './state'\nimport Panel from './styles/panels.module.css'\nimport Util from './utils.module.css'\n\nconst ResponsiveResizePanel = () => {\n  const { state, actions } = useAppContext()\n  const currentWidth = state && state.frameWidth\n\n  const widths = [null, 479, 767, 1199]\n\n  return (\n    <div className={Panel.root}>\n      {/*\n        <div className={Panel.header}>\n          <h3 className={Panel.title}>Responsive</h3>\n        </div>\n      */}\n      <div className={Panel.body}>\n        {widths.map((width, index) => {\n          const isActive = currentWidth === width\n\n          return (\n            <button\n              className={cn(CSS.button, { [CSS.isActive]: isActive })}\n              key={width || index}\n              onClick={() => actions && actions.setFrameWidth(width)}\n            >\n              {width || 'Reset'}\n            </button>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default ResponsiveResizePanel\n","import cn from 'classnames'\nimport toString from 'jsx-to-string'\nimport React from 'react'\nimport CSS from './SourceCodePanel.module.css'\nimport Util from './utils.module.css'\n\ninterface Props {\n  view: () => React.ReactNode\n}\n\nconst SourceCodePanel = (props: Props) => {\n  const { view } = props\n  const code = toString(view())\n\n  return (\n    <div className={CSS.root}>\n      <div className={CSS.header}>\n        <h3 className={CSS.title}>Source code</h3>\n      </div>\n      <div className={CSS.body}>\n        <textarea\n          spellCheck={false}\n          className={cn(Util.textarea)}\n          rows={10}\n          value={code}\n          readOnly\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default SourceCodePanel\n","import React from 'react'\nimport Panel from './styles/panels.module.css'\nimport { Specimen } from './types'\n\ninterface Props {\n  specimen: Specimen\n}\n\nconst SpecimenDescriptionPanel = (props: Props) => {\n  const { specimen } = props\n  if (!specimen.description) {\n    return <></>\n  }\n\n  return (\n    <div className={Panel.root}>\n      <div className={Panel.header}>\n        <h3 className={Panel.title}>Description</h3>\n      </div>\n      <div className={Panel.body}>{specimen.description}</div>\n    </div>\n  )\n}\n\nexport default SpecimenDescriptionPanel\n","import React from 'react'\nimport ResponsiveResizePanel from './ResponsiveResizePanel'\nimport SourceCodePanel from './SourceCodePanel'\nimport SpecimenDescriptionPanel from './SpecimenDescriptionPanel'\nimport { Specimen } from './types'\n\ninterface Props {\n  specimen: Specimen\n  id: string\n}\n\nconst SpecimenPanels = (props: Props) => {\n  const { specimen, id } = props\n\n  return (\n    <>\n      {specimen.description ? (\n        <SpecimenDescriptionPanel {...{ specimen }} />\n      ) : null}\n      <ResponsiveResizePanel />\n      <SourceCodePanel view={specimen.view} key={id} />\n    </>\n  )\n}\n\nexport default SpecimenPanels\n","import React from 'react'\n\n/**\n * Harvests stylesheets and returns them as React nodes.\n */\n\nexport const harvestHead = () => {\n  const styleEls = document.querySelectorAll<HTMLStyleElement>('style')\n\n  const styles = Array.from(styleEls).map(element => {\n    return <style {...toProps(element.attributes)}>{element.innerText}</style>\n  })\n\n  const linkEls = document.querySelectorAll<HTMLLinkElement>(\n    'link[rel=\"stylesheet\"]'\n  )\n\n  const links = Array.from(linkEls).map(element => {\n    return <link {...toProps(element.attributes)} />\n  })\n\n  return [...styles, ...links]\n}\n\nconst toProps = (attributes: NamedNodeMap) => {\n  return Array.from(attributes).reduce((result, attr) => {\n    return { ...result, [attr.name]: attr.value }\n  }, {})\n}\n\nexport default harvestHead\n","import React from 'react'\nimport Frame from 'react-frame-component'\nimport harvestHead from './utilities/harvestHead'\n\n/**\n * Wraps the `children` in an iframe.\n * Injects styles.\n *\n * See:\n * https://github.com/ryanseddon/react-frame-component\n */\n\nconst FrameWrapper = ({ children, className, style }: Props) => {\n  const head = (\n    <>\n      <style>{`html, body { min-height: 100%; margin: 0; padding: 0; }`}</style>\n      {harvestHead()}\n    </>\n  )\n  return (\n    <Frame head={head} className={className} style={style || {}}>\n      {children}\n    </Frame>\n  )\n}\n\ninterface Props {\n  children: React.ReactNode\n  className?: string\n  style?: React.CSSProperties\n}\n\nexport default FrameWrapper\n","import cn from 'classnames'\nimport React from 'react'\nimport FrameWrapper from './FrameWrapper'\nimport CSS from './SpecimenView.module.css'\nimport { useAppContext } from './state'\nimport { Specimen } from './types'\n\n/**\n * Displays the specimen in an iframe.\n */\n\nconst SpecimenView = ({ specimen }: Props) => {\n  const { state } = useAppContext()\n\n  // If responsive mode\n  const frameWidth = state && state.frameWidth\n\n  const useFrame =\n    typeof specimen.useFrame === 'boolean'\n      ? specimen.useFrame\n      : state && typeof state.useFrame === 'boolean'\n      ? state.useFrame\n      : false\n\n  const { view: Component } = specimen\n\n  // @ts-ignore I don't know how to type this (TS2605)\n  const componentNode = <Component />\n\n  // If it's in responsive mode, don't allow fixed sizes (ie, numbers),\n  // but allow fluid sizes (eg, '100%')\n  const bodyWidth = !frameWidth\n    ? specimen.width\n    : typeof specimen.width === 'string'\n    ? specimen.width\n    : null\n\n  const body = (\n    <div\n      className={CSS.frame}\n      style={{\n        width: bodyWidth || 'auto',\n        margin: 'auto',\n        flex: '0 0 auto',\n        background: specimen.background || 'white',\n        padding: specimen.padding || 0\n      }}\n    >\n      {componentNode}\n    </div>\n  )\n\n  if (useFrame) {\n    return (\n      <FrameWrapper\n        className={cn(CSS.iframe, {\n          [CSS.isResponsive]: !!frameWidth\n        })}\n        style={frameWidth ? { width: frameWidth, minWidth: frameWidth } : {}}\n      >\n        <div className={CSS.iframeBody}>{body}</div>\n      </FrameWrapper>\n    )\n  } else {\n    return body\n  }\n}\n\ninterface Props {\n  specimen: Specimen\n}\n\nexport default SpecimenView\n","import React from 'react'\nimport CSS from './Penpad.module.css'\nimport SpecimenNavigation from './SpecimenNavigation'\nimport SpecimenPanels from './SpecimenPanels'\nimport SpecimenView from './SpecimenView'\nimport { useAppContext } from './state'\nimport { Specimen, State } from './types'\n\n/**\n * The body to be shown for specimens view\n */\n\nconst SpecimensBody = ({\n  specimen,\n  specimenId\n}: {\n  specimen: Specimen | null\n  specimenId: string | null\n}) => {\n  const { state, actions } = useAppContext()\n  if (!state || !actions) {\n    return <span />\n  }\n\n  const { specimens } = state\n\n  return (\n    <>\n      {/* Main area */}\n      <main className={CSS.main}>\n        {specimen ? <SpecimenView {...{ specimen }} /> : null}\n      </main>\n\n      {/* Left */}\n      <aside className={CSS.sidebar}>\n        {specimens ? (\n          <SpecimenNavigation {...{ specimens, state, actions }} />\n        ) : null}\n      </aside>\n\n      {/* Right */}\n      <aside className={CSS.panels}>\n        {specimen && specimenId ? (\n          <SpecimenPanels {...{ specimen, id: specimenId }} key={specimenId} />\n        ) : null}\n      </aside>\n    </>\n  )\n}\nexport default SpecimensBody\n","// @ts-ignore\nimport Chevron from '-!react-svg-loader!clarity-icons-svg/core/angle-outline.svg'\nimport React from 'react'\nimport CSS from './TitleText.module.css'\n\ninterface Props {\n  parts: React.ReactNode[]\n}\n\nconst TitleText = (props: Props) => {\n  const { parts } = props\n\n  return (\n    <div className={CSS.root}>\n      {parts.map((part, idx) => {\n        return (\n          <React.Fragment key={idx}>\n            {part ? (\n              <>\n                {idx === 0 ? null : <Chevron className={CSS.separator} />}\n                <span className={CSS.part}>{part}</span>\n              </>\n            ) : null}\n          </React.Fragment>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default TitleText\n","// @ts-ignore\nimport DocsIcon from '-!react-svg-loader!clarity-icons-svg/essential/file-outline.svg'\n// @ts-ignore\nimport SpecimenIcon from '-!react-svg-loader!clarity-icons-svg/essential/library-outline.svg'\nimport cn from 'classnames'\nimport React from 'react'\nimport { useAppContext } from './state'\nimport CSS from './TitleBar.module.css'\nimport TitleText from './TitleText'\nimport { State } from './types'\n\nconst TitleBar = () => {\n  const { state, actions } = useAppContext()\n  if (!state || !actions) return <span />\n\n  return (\n    <div className={CSS.root}>\n      <div className={CSS.left}>\n        {/* Docs */}\n        <button\n          className={cn(CSS.navButton, {\n            [CSS.isActive]: state.activeView.type === 'page'\n          })}\n          onClick={actions.navToDocs}\n        >\n          <DocsIcon className={CSS.navIcon} />\n          <span className={CSS.navLabel}>Docs</span>\n        </button>\n\n        {/* Specimens */}\n        <button\n          className={cn(CSS.navButton, {\n            [CSS.isActive]: state.activeView.type === 'specimen'\n          })}\n          onClick={actions.navToSpecimens}\n        >\n          <SpecimenIcon className={CSS.navIcon} />\n          <span className={CSS.navLabel}>Specimens</span>\n        </button>\n      </div>\n\n      {/* Middle */}\n      <div className={CSS.mid}>\n        <DynamicTitleText {...{ state, actions }} />\n      </div>\n    </div>\n  )\n}\n\nconst DynamicTitleText = ({ state }: { state: State }) => {\n  const { activeView } = state\n\n  if (activeView.type === 'specimen') {\n    if (activeView.specimenId) {\n      return <TitleText parts={[activeView.specimenId]} />\n    }\n  }\n  if (activeView.type === 'page') {\n    if (activeView.pageId) {\n      return <TitleText parts={[state.title, activeView.pageId]} />\n    }\n  }\n  return <TitleText parts={[state.title]} />\n}\n\nexport default TitleBar\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport DocsBody from './DocsBody'\nimport CSS from './Penpad.module.css'\nimport SpecimensBody from './SpecimensBody'\nimport { AppProvider, useAppState } from './state'\nimport TitleBar from './TitleBar'\nimport { Config } from './types'\n\nconst Penpad = (props: Config) => {\n  const { state, actions } = useAppState(props)\n  const { title } = props\n  const { activeView, specimens } = state\n\n  // 'specimen' or 'page', depending on what's selected on top.\n  const viewType = activeView.type\n\n  // The active specimen\n  const specimenId =\n    (activeView.type === 'specimen' && activeView.specimenId) || null\n\n  // The specimen object\n  const specimen = (specimenId && specimens && specimens[specimenId]) || null\n\n  return (\n    <AppProvider value={{ state, actions }}>\n      <div className={CSS.root}>\n        <Helmet>\n          <title>{title}</title>\n          <meta name='viewport' content='width=1200px' />\n        </Helmet>\n        <div className={CSS.topnav}>\n          <div className={CSS.title}>\n            <TitleBar />\n          </div>\n        </div>\n        <div className={CSS.body}>\n          {viewType === 'specimen' ? (\n            <SpecimensBody {...{ specimen, specimenId }} />\n          ) : null}\n          {viewType === 'page' ? <DocsBody /> : null}\n        </div>\n      </div>\n    </AppProvider>\n  )\n}\n\nPenpad.defaultProps = {\n  title: 'Penpad',\n  pages: {},\n  useFrame: true\n}\n\n/*\n * Export\n */\n\nexport default Penpad\n","import React from 'react'\nimport { Penpad, combineContext } from '../penpad'\n\nconst StyleguidePage = () => {\n  const specimens = combineContext(\n    require.context('../', true, /\\.specimens\\.(jsx?|tsx?)$/)\n  )\n\n  // const pages = combineContext(require.context('./', true, /\\.mdx$/))\n  const pages = {\n    Home: function Home() {\n      return (\n        <div>\n          <h1>Penpad demo</h1>\n          <p>\n            Welcome to Penpad, this is a very early demo! Penpad allows you to\n            design and document your web UI components. It supports React, and\n            can be used anywhere React can be used.\n          </p>\n          <h2>Penpad features</h2>\n          <ul>\n            <li>\n              <strong>Live editing</strong> &mdash; You can edit live.\n            </li>\n            <li>\n              <strong>Integrates anywhere</strong> &mdash; Penpad supports\n              React, and work wherever React can be used.\n            </li>\n          </ul>\n          <h2>Learn more</h2>\n          <p>\n            Check it out on GitHub!{' '}\n            <a href='https://github.com/rstacruz/penpad'>rstacruz/penpad</a>\n          </p>\n        </div>\n      )\n    },\n    'About this': function AboutThis() {\n      return (\n        <div>\n          <h1>About this</h1>\n          <p>\n            This is{' '}\n            <a href='https://github.com/rstacruz/penpad'>rstacruz/penpad</a>.\n          </p>\n        </div>\n      )\n    }\n  }\n\n  return <Penpad title='Devhints Penpad' pages={pages} specimens={specimens} />\n}\n\nexport default StyleguidePage\n","export { default as Penpad } from './Penpad'\n\ntype Result = any\n\n// A webpack context\ntype WebpackContextFn = (id: string) => Result | { default?: Result }\ninterface WebpackContext extends WebpackContextFn {\n  keys: () => string[]\n}\n\n// type WebpackContext = () => {})\n\n/**\n * Combines all objects in Webpack context into one object.\n * Useful for combining specimens.\n *\n * @example\n *     combineContext(require.context('../', true, /\\*.js/))\n */\n\nfunction combineContext(context: WebpackContext | WebpackContext[]): any {\n  if (Array.isArray(context)) {\n    return context.reduce((result: any, ctx: WebpackContext) => {\n      return { ...result, ...combineContext(ctx) }\n    }, {})\n  }\n\n  return context.keys().reduce((result: Result, item: string) => {\n    const exports = context(item)\n    const specs = exports.default ? exports.default : exports\n    return { ...result, ...specs }\n  }, {})\n}\n\nexport { combineContext }\n","var map = {\n\t\"./styleguides/BackButton.specimens.tsx\": 476,\n\t\"./styleguides/FeaturedPages.specimens.tsx\": 483,\n\t\"./styleguides/LiveSearchInput.specimens.tsx\": 480,\n\t\"./styleguides/RelatedPosts.specimens.tsx\": 481,\n\t\"./styleguides/TopNav.specimens.tsx\": 482\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 475;","import React from 'react'\nimport BackButton from '../web/components/BackButton'\n\nexport default {\n  BackButton: {\n    view: () => <BackButton />,\n    description: `This is a back button. When you click it, it goes back. It's very important.`,\n    width: 48\n  }\n}\n","import React from 'react'\nimport LiveSearchInput from '../search/containers/LiveSearchInput'\n\nexport default {\n  LiveSearchInput: {\n    view: () => <LiveSearchInput />,\n    description: `Place it anywhere for a good time`,\n    width: 200\n  }\n}\n","import React from 'react'\nimport RelatedPostsArea from '../web/components/RelatedPostsArea'\nimport RelatedPostsCallout from '../web/components/RelatedPostsCallout'\nimport RelatedPostsGroup from '../web/components/RelatedPostsGroup'\n\nexport default {\n  RelatedPostsArea: {\n    view: () => (\n      <RelatedPostsArea\n        topPages={[\n          { path: '/vim', title: 'Vim' },\n          { path: '/node', title: 'Node.js' },\n          { path: '/sass', title: 'Sass' },\n          { path: '/bash', title: 'Bash' },\n          { path: '/emacs', title: 'Emacs' },\n          { path: '/stylus', title: 'Stylus' }\n        ]}\n        relatedPages={[\n          { path: '/vim', title: 'Vim' },\n          { path: '/node', title: 'Node.js' },\n          { path: '/sass', title: 'Sass' },\n          { path: '/bash', title: 'Bash' },\n          { path: '/emacs', title: 'Emacs' },\n          { path: '/stylus', title: 'Stylus' }\n        ]}\n        pageCount={123}\n      />\n    )\n  },\n  RelatedPostsCallout: {\n    view: () => <RelatedPostsCallout pageCount={200} />,\n    description: `Related posts callout. Shown at the end of a page, around the colophon area. Provides a link to the home page.`,\n    width: 300\n  },\n  RelatedPostsGroup: {\n    view: () => (\n      <RelatedPostsGroup\n        title='Related posts'\n        pages={[\n          { path: '/vim', title: 'Vim' },\n          { path: '/node', title: 'Node.js' },\n          { path: '/sass', title: 'Sass' },\n          { path: '/bash', title: 'Bash' }\n        ]}\n      />\n    ),\n    background: '#fafafa',\n    padding: 16,\n    width: 340\n  },\n  'RelatedPostsGroup/2': {\n    view: () => (\n      <RelatedPostsGroup\n        title='Related posts'\n        pages={[\n          { path: '/sass', title: 'Sass' },\n          { path: '/bash', title: 'Bash' }\n        ]}\n      />\n    ),\n    background: '#fafafa',\n    padding: 16,\n    width: 340\n  }\n}\n","import React from 'react'\nimport TopNav from '../web/components/TopNav'\n\nexport default {\n  TopNav: { view: () => <TopNav title='Hello' />, width: '100%' },\n  'TopNav/back': { view: () => <TopNav back title='Hello' /> },\n  'TopNav/noTitle': { view: () => <TopNav back /> }\n}\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport CSS from './FeaturedPagesLink.module.scss'\n\ninterface Props {\n  path: string\n  title: string\n}\n\nconst FeaturedPageLink = (props: Props) => {\n  const { path, title } = props\n\n  return (\n    <Link to={path} className={CSS.root}>\n      {title}\n    </Link>\n  )\n}\n\nexport default FeaturedPageLink\n","import { graphql, Link, StaticQuery } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport FeaturedPageLink from './FeaturedPageLink'\n\ninterface Context {\n  nodePath: string\n  category: string\n  title: string\n}\n\ninterface Node {\n  id: string\n  context: Pick<Context, 'nodePath' | 'title'>\n}\n\ninterface Data {\n  pages: {\n    nodes: Node[]\n  }\n}\n\ninterface ViewProps {\n  nodes: Node[]\n}\n\nconst FeaturedPages = () => {\n  return (\n    <StaticQuery\n      query={query}\n      render={(data: Data) => <FeaturedPagesView nodes={data.pages.nodes} />}\n    />\n  )\n}\n\nconst FeaturedPagesView = (props: ViewProps) => {\n  const { nodes } = props\n\n  return (\n    <div>\n      {nodes.map(node => {\n        return (\n          <FeaturedPageLink\n            key={node.id}\n            path={node.context.nodePath}\n            title={node.context.title}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nconst query = graphql`\n  query FeaturedPagesQuery {\n    pages: allSitePage(\n      filter: {\n        context: { isFeatured: { eq: true }, nodeType: { eq: \"sheet\" } }\n      }\n      sort: { fields: [context___updated], order: DESC }\n      limit: 8\n    ) {\n      nodes {\n        id\n        context {\n          nodePath\n          category\n          title\n        }\n      }\n    }\n  }\n`\n\n/*\n * Export\n */\n\nexport default FeaturedPages\nexport { FeaturedPagesView }\n","import React from 'react'\nimport FeaturedPages, {\n  FeaturedPagesView\n} from '../web/components/FeaturedPages'\n\nexport default {\n  FeaturedPages: { view: () => <FeaturedPages /> },\n  'FeaturedPages/view': {\n    view: () => (\n      <FeaturedPagesView\n        nodes={[\n          { id: 'a', context: { nodePath: '/vim', title: 'Vim' } },\n          { id: 'b', context: { nodePath: '/nodejs', title: 'Node.js' } },\n          { id: 'c', context: { nodePath: '/gatsby', title: 'Gatsby' } },\n          { id: 'd', context: { nodePath: '/sass', title: 'Sass' } },\n          { id: 'e', context: { nodePath: '/stylus', title: 'Stylus' } },\n          { id: 'f', context: { nodePath: '/arch', title: 'Arch Linux' } }\n        ]}\n      />\n    )\n  }\n}\n"],"sourceRoot":""}