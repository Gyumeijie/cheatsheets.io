{"version":3,"sources":["webpack:///./src/web/components/ExternalSearchLinks.tsx","webpack:///./src/pages/404.tsx","webpack:///./packages/helpers/index.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/search/containers/SearchProvider.tsx","webpack:///./src/search/components/SearchItem.tsx","webpack:///./src/search/components/SearchModal.tsx","webpack:///./src/search/containers/LiveSearchInput.tsx","webpack:///./config.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/web/containers/Layout.tsx","webpack:///./src/search/index.tsx"],"names":["ExternalSearchLinks","_ref","keyword","query","phrase","react_default","a","createElement","href","NotFoundPage","gatsby_browser_entry","render","data","str","pathname","location","slice","replace","Layout","_404_NotFoundPageView","title","CONTENT","notFound","description","home","siteSearchIndex","_1241358890","NotFoundPageView","components_ExternalSearchLinks","search","gatsby_link_default","to","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SearchProvider","_React$Component","_this","call","this","state","results","searchOpts","fields","nodePath","boost","expand","getOrCreateIndex","index","Index","load","handleInput","evt","target","value","setState","doSearch","map","ref","documentStore","getDoc","initialValue","Object","assign","inheritsLoose_default","prototype","rprops","onChange","Component","SearchItem","page","className","CSS","root","link","path","category","SearchModalView","onDismiss","onClick","type","autoFocus","length","list","components_SearchItem","key","SearchModal","containers_SearchProvider","SearchModal_SearchModalView","DEFAULT_STATE","isActivated","LiveSearchInput","_2959298900","_useAppState","useAppState","actions","placeholder","Fragment","input","components_SearchModal","dismissModal","_useState","useState","event","trim","defaultProps","recentlyUpdated","updatedLabel","siteHeader","tagline","topNav","edit","editOnGithub","sheet","suffix","relatedPostsCallout","searchForm","defaultPlaceholder","homePlaceholder","prefix","commentsArea","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","meta","name","content","_containers_LiveSearchInput__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-404-tsx-5a734a6193fda0ca4420.js","sourcesContent":["import React from 'react'\n\nexport interface Props {\n  keyword: string\n}\n\n/**\n * Links to external sources.\n *\n * @example\n *     <ExternalSearchLinks keyword='gatsby' />\n */\n\nexport const ExternalSearchLinks = ({ keyword }: Props) => {\n  const query = keyword\n  const phrase = <code>{keyword}</code>\n\n  return (\n    <ul>\n      <li>\n        <a href={`https://yarnpkg.com/en/packages?q=${query}`}>\n          Search {phrase} on Yarn.pm\n        </a>\n      </li>\n      <li>\n        <a\n          href={`https://github.com/search?q=${query}&type=Everything&repo=&langOverride=&start_value=1`}\n        >\n          Search {phrase} on GitHub\n        </a>\n      </li>\n      <li>\n        <a href={`https://npmjs.com/search?q=${query}`}>\n          Search {phrase} on npm\n        </a>\n      </li>\n      <li>\n        <a href={`https://devdocs.io/?q=${query}`}>\n          Search {phrase} on devdocs.io\n        </a>\n      </li>\n      <li>\n        <a href={`https://developer.mozilla.org/en-US/search?q=${query}`}>\n          Search {phrase} on MDN\n        </a>\n      </li>\n      <li>\n        <a\n          href={`https://next.duckduckgo.com/?q=${query}+cheatsheet&ia=cheatsheet&iax=1#zero_click_wrapper`}\n        >\n          {phrase} cheatsheet on DuckDuckGo\n        </a>\n      </li>\n    </ul>\n  )\n}\n\nexport default ExternalSearchLinks\n","import { keywordify } from '@devhints/helpers'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Link from 'gatsby-link'\nimport React from 'react'\nimport Layout from '../web/containers/Layout'\n\nimport { CONTENT } from '../../config'\nimport { LiveSearchInput } from '../search'\nimport ExternalSearchLinks from '../web/components/ExternalSearchLinks'\n\nexport interface Data {\n  siteSearchIndex: any\n}\n\nexport interface Props {\n  keyword: string | void | null // => 'rails' | null\n  title: string // => 'Not Found'\n  description: string // => 'Try searching!'\n  home: string // => 'Back to home'\n  siteSearchIndex: any\n}\n\n/**\n * The 404 page.\n */\n\nexport const NotFoundPage = () => (\n  <StaticQuery\n    query={query}\n    render={(data: Data) => {\n      const pathname: string | null =\n        typeof location !== 'undefined' ? location.pathname : null\n      const keyword: string | null = keywordify(pathname)\n\n      return (\n        <Layout>\n          <NotFoundPageView\n            keyword={keyword}\n            title={CONTENT.notFound.title}\n            description={CONTENT.notFound.description}\n            home={CONTENT.notFound.home}\n            siteSearchIndex={data && data.siteSearchIndex}\n          />\n        </Layout>\n      )\n    }}\n  />\n)\n\n/**\n * The 404 page view.\n */\n\nexport const NotFoundPageView = ({\n  keyword,\n  title,\n  description,\n  home,\n  siteSearchIndex\n}: Props) => {\n  return (\n    <div>\n      <h1>{title}</h1>\n      <p>{description}</p>\n      {keyword && <ExternalSearchLinks keyword={keyword} />}\n      <LiveSearchInput />\n      <Link to='/'>{home}</Link>\n    </div>\n  )\n}\n\nexport default NotFoundPage\n\nexport const query = graphql`\n  query SearchIndexExampleQuery {\n    siteSearchIndex {\n      index\n    }\n  }\n`\n","/**\n * Convert pathname to keywords.\n *\n *     keywordify('/gatsby') => 'gatsby'\n *     keywordify('/rails/models.html') => 'rails-models'\n *     keywordify(null) => null\n */\n\nexport function keywordify(str: string | null | void) {\n  if (!str) {\n    return null\n  }\n\n  return str\n    .slice(1)\n    .replace(/^cheatsheets-ng\\//, '')\n    .replace(/\\//g, '-')\n    .replace(/ /g, '_')\n    .replace(/\\.html$/, '')\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { Index } from 'elasticlunr'\nimport React from 'react'\nimport { SearchPageItem, SiteSearchIndex } from '../../web/types'\n\n// To be passed onto children\nexport interface RenderProps {\n  query: string\n  results: SearchPageItem[]\n  onChange: (arg0: any) => void\n}\n\nexport interface Props {\n  siteSearchIndex: SiteSearchIndex\n  initialValue?: string\n  children: (rprops: RenderProps) => React.ReactNode\n}\n\nexport interface State {\n  query: string\n  results: SearchPageItem[]\n}\n\n/**\n * @example\n *     <SearchProvider siteSearchIndex={index}>\n *       {({ query, results, onChange }) => (\n *         <input value={query} onChange={onChange} />\n *         <pre>{JSON.stringify(results, null, 2)}</pre>\n *       )}\n *     </SearchProvider>\n */\n\nexport class SearchProvider extends React.Component<Props, State> {\n  index: any\n\n  state = {\n    query: '',\n    results: []\n  }\n\n  // Options passed onto elasticlunr.js\n  searchOpts = {\n    fields: {\n      nodePath: { boost: 3 },\n      title: { boost: 1 }\n    },\n    expand: true\n  }\n\n  constructor(props: Props) {\n    super(props)\n    const query = props.initialValue\n\n    if (query) Object.assign(this.state, this.doSearch(query))\n  }\n\n  /**\n   * Returns the ElasticLunr index.\n   */\n\n  getOrCreateIndex = () => {\n    if (this.index) return this.index\n\n    const index = Index.load(this.props.siteSearchIndex.index)\n    this.index = index\n    return index\n  }\n\n  /*\n   * Update results after typing in.\n   */\n\n  handleInput = (evt: { target: HTMLInputElement }) => {\n    const query = evt.target.value\n    this.setState(this.doSearch(query))\n  }\n\n  /**\n   * Performs a search, and returns a state update.\n   */\n\n  doSearch = (query: string) => {\n    const index = this.getOrCreateIndex()\n\n    // Query the index with search string to get an [] of IDs,\n    // then map over each ID and return the full document\n    const results = index\n      .search(query, this.searchOpts)\n      .map(({ ref }: any) => this.index.documentStore.getDoc(ref))\n\n    return { query, results }\n  }\n\n  render() {\n    const rprops: RenderProps = {\n      query: this.state.query,\n      results: this.state.results,\n      onChange: this.handleInput\n    }\n\n    return this.props.children(rprops)\n  }\n}\n\nexport default SearchProvider\n","import Link from 'gatsby-link'\nimport React from 'react'\nimport CSS from './SearchItem.module.css'\n\nimport { SearchPageItem } from '../../web/types'\n\nexport interface Props {\n  page: SearchPageItem\n}\n\nconst SearchItem = ({ page }: Props) => {\n  return (\n    <li className={CSS.root}>\n      <Link to={page.nodePath} className={CSS.link}>\n        <strong className={CSS.path}>{page.nodePath}</strong>\n        <small className={CSS.title}>{page.title}</small>\n        <small className={CSS.category}>{page.category}</small>\n      </Link>\n    </li>\n  )\n}\n\nexport default SearchItem\n","import React from 'react'\n\nimport { SearchPageItem, SiteSearchIndex } from '../../web/types'\nimport SearchProvider, { RenderProps } from '../containers/SearchProvider'\nimport SearchItem from './SearchItem'\nimport CSS from './SearchModal.module.css'\n\nexport interface Props {\n  siteSearchIndex: SiteSearchIndex\n  initialValue: string\n  onDismiss: () => any\n}\n\nexport type ViewProps = RenderProps & {\n  onDismiss: () => any\n}\n\n/**\n * The search modal.\n * @name SearchModal\n */\n\nexport const SearchModal = (props: Props) => {\n  return (\n    <SearchProvider {...props}>\n      {(rprops: RenderProps) => (\n        <SearchModalView {...rprops} onDismiss={props.onDismiss} />\n      )}\n    </SearchProvider>\n  )\n}\n\n/**\n * Search modal view.\n */\n\nexport const SearchModalView = ({\n  query,\n  results,\n  onChange,\n  onDismiss\n}: ViewProps) => {\n  return (\n    <div className={CSS.root}>\n      <button onClick={onDismiss}>&times;</button>\n\n      <input type='text' value={query} onChange={onChange} autoFocus />\n      {results && results.length ? (\n        <ul className={CSS.list}>\n          {results.map((page: SearchPageItem) => (\n            <SearchItem page={page} key={page.title} />\n          ))}\n        </ul>\n      ) : (\n        <span>No results found</span>\n      )}\n    </div>\n  )\n}\n\nexport default SearchModal\n","/**\n * Put me anywhere for a cool search box.\n */\n\nimport { graphql, useStaticQuery } from 'gatsby'\nimport React, { useState } from 'react'\nimport SearchModal from '../components/SearchModal'\nimport CSS from './LiveSearchInput.module.css'\n\nconst DEFAULT_STATE = {\n  isActivated: false,\n  initialValue: ''\n}\n\n/**\n * Live search input\n */\n\nconst LiveSearchInput = (props: Props) => {\n  const { siteSearchIndex } = useStaticQuery(QUERY)\n  const { state, actions } = useAppState()\n  const { placeholder } = props\n\n  return (\n    <React.Fragment>\n      <input\n        type='text'\n        placeholder={placeholder || 'Search...'}\n        className={CSS.input}\n        onChange={actions.handleInput}\n        value=''\n      />\n\n      {state.isActivated ? (\n        <SearchModal\n          siteSearchIndex={siteSearchIndex}\n          initialValue={state.initialValue}\n          onDismiss={actions.dismissModal}\n        />\n      ) : null}\n    </React.Fragment>\n  )\n}\n\nconst useAppState = () => {\n  const [state, setState] = useState<State>(DEFAULT_STATE)\n  const actions = {\n    handleInput(event: { target: HTMLInputElement }) {\n      const value = event.target.value\n\n      if (value.trim().length) {\n        setState({ ...state, isActivated: true, initialValue: value })\n      }\n    },\n    dismissModal() {\n      setState({ ...state, isActivated: false })\n    }\n  }\n  return { state, actions }\n}\n\nLiveSearchInput.defaultProps = {\n  placeholder: 'Search...'\n}\n\n/**\n * Properties\n */\n\nexport interface Props {\n  placeholder: string\n}\n\n/**\n * State\n */\n\nexport interface State {\n  /** This will be set to `true` when it's activated. */\n  isActivated: boolean\n\n  /** The initial value to be passed onto the modal dialog. */\n  initialValue: string\n}\n\n/**\n * GraphQL query\n */\n\nconst QUERY = graphql`\n  query GetSiteSearchIndex {\n    siteSearchIndex {\n      index\n    }\n  }\n`\n\n/**\n * Export\n */\n\nexport default LiveSearchInput\n","/**\n * Raw content\n */\n\nexport const CONTENT = {\n  home: {\n    title: 'Devhints.io — TL;DR for developer documentation',\n    description: 'A ridiculous collection of web development cheatsheets',\n    recentlyUpdated: 'Recently updated',\n    updatedLabel: 'Updated'\n  },\n\n  // Home page banner (SiteHeader)\n  siteHeader: {\n    title: \"Rico's cheatsheets\",\n    tagline: `Hey! I'm <a href='https://ricostacruz.com'>@Gyumeijie</a> and this is a modest collection of cheatsheets I've written.`\n  },\n\n  // Top navigation (TopNav)\n  topNav: {\n    title: 'Devhints.io',\n    edit: 'Edit',\n    editOnGithub: 'Edit this page on GitHub'\n  },\n\n  sheet: {\n    suffix: 'cheatsheet'\n  },\n\n  // Callout at the bottom of the sheets\n  relatedPostsCallout: {\n    description: 'Over SIZE curated cheatsheets, by developers for developers.',\n    link: 'Devhints home'\n  },\n\n  // Search form in the home page\n  searchForm: {\n    defaultPlaceholder: 'Search SIZE+ cheatsheets',\n    homePlaceholder: 'Search...',\n    prefix: 'devhints.io'\n  },\n\n  // Comments area in the sheets\n  commentsArea: {\n    suffix: 'for this cheatsheet.',\n    link: 'Write yours!'\n  },\n\n  // 404 page\n  notFound: {\n    title: 'Not found',\n    description:\n      \"Sorry, we don't have a cheatsheet for this yet. Try searching!\",\n    home: 'Back to home'\n  }\n}\n\n/**\n * Disqus integration (TODO)\n * @name DISQUS\n */\n\nexport const DISQUS = {\n  enabled: true,\n  host: 'devhints.disqus.com'\n}\n\nconst siteMetadata = {\n  content: CONTENT,\n  github: {\n    repo: 'https://github.com/Gyumeijie/cheatsheets',\n    branch: 'master'\n  },\n  assets: {\n    preview_host: 'https://assets.devhints.io/previews'\n  },\n  codefund: {\n    enabled: true,\n    token: 'c2c8bc62-c275-4c7a-a304-74335c5a1cd0'\n  },\n  googleAnalytics: {\n    hostname: 'devhints.io',\n    id: 'UA-106902774-1'\n  },\n  disqus: {\n    enabled: true,\n    host: 'devhints.disqus.com'\n  }\n}\n\nexport default siteMetadata\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\n/**\n * Props\n */\n\nexport interface Props {\n  children: React.ReactNode\n}\n\n/**\n * Base layout\n */\n\nfunction Layout({ children }: Props) {\n  return (\n    <React.Fragment>\n      <Helmet\n        title='Devhints.io'\n        meta={[\n          { name: 'description', content: 'Sample' },\n          { name: 'keywords', content: 'sample, something' }\n        ]}\n      />\n      {children}\n    </React.Fragment>\n  )\n}\n\nexport default Layout\n","// Main entry point\nexport { default as LiveSearchInput } from './containers/LiveSearchInput'\n"],"sourceRoot":""}
